package com.planet_ink.grinder;
import java.awt.*;



public class GrinderConnectDialog extends Dialog {

    public Frame myParent=null;
	public GrinderConnectDialog(Frame parent, boolean modal)
	{
		super(parent, modal);
		myParent=parent;

		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
        
		//{{INIT_CONTROLS
		setLayout(null);
		setBackground(new java.awt.Color(255,255,128));
		setForeground(java.awt.Color.blue);
		setFont(new Font("Dialog", Font.BOLD, 12));
		setSize(240,265);
		setVisible(false);
		label1.setText("Enter Archon Login:");
		add(label1);
		label1.setFont(new Font("Dialog", Font.BOLD, 14));
		label1.setBounds(12,96,228,36);
		okButton.setLabel("Login");
		add(okButton);
		okButton.setBounds(24,204,66,27);
		cancelButton.setLabel("Cancel");
		add(cancelButton);
		cancelButton.setBounds(156,204,66,27);
		serverField.setText("localhost");
		add(serverField);
		serverField.setBounds(96,36,132,24);
		label2.setText("Server URL:");
		add(label2);
		label2.setForeground(java.awt.Color.black);
		label2.setBounds(12,36,72,24);
		label3.setText("Server Port:");
		add(label3);
		label3.setForeground(java.awt.Color.black);
		label3.setBounds(12,60,72,24);
		portField.setText("23");
		add(portField);
		portField.setBounds(96,60,72,24);
		label4.setText("Enter Server Information:");
		add(label4);
		label4.setFont(new Font("Dialog", Font.BOLD, 14));
		label4.setBounds(12,0,228,36);
		add(loginField);
		loginField.setBounds(96,132,132,24);
		add(passwordField);
		passwordField.setBounds(96,156,132,24);
		label5.setText("Password:");
		add(label5);
		label5.setForeground(java.awt.Color.black);
		label5.setBounds(12,156,72,24);
		label6.setText("Name:");
		add(label6);
		label6.setForeground(java.awt.Color.black);
		label6.setBounds(12,132,72,24);
		add(label7);
		label7.setForeground(java.awt.Color.red);
		label7.setBounds(12,228,221,38);
		setTitle("MUDGrinder Connect");
		setResizable(false);
		//}}
        
		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		okButton.addActionListener(lSymAction);
		cancelButton.addActionListener(lSymAction);
		SymKey lSymKey=new SymKey();
		okButton.addKeyListener(lSymKey);
		cancelButton.addKeyListener(lSymKey);
		//}}

	}
    
	public GrinderConnectDialog(Frame parent, String title, boolean modal)
	{
		this(parent, modal);
		setTitle(title);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
                Dimension d = getSize();

		super.addNotify();

		// Only do this once.
		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		Insets insets = getInsets();
		setSize(insets.left + insets.right + d.width, insets.top + insets.bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets.left, insets.top);
			components[i].setLocation(p);
		}

		// Used for addNotify check.
		fComponentsAdjusted = true;
	}

	public void setVisible(boolean b)
	{
	    if (b)
	    {
    		Rectangle bounds = getParent().getBounds();
    		Rectangle abounds = getBounds();

    		setLocation(bounds.x + (bounds.width - abounds.width)/ 2,
    			 bounds.y + (bounds.height - abounds.height)/2);
	    }

		super.setVisible(b);
	}

	//{{DECLARE_CONTROLS
	java.awt.Label label1 = new java.awt.Label();
	java.awt.Button okButton = new java.awt.Button();
	java.awt.Button cancelButton = new java.awt.Button();
	java.awt.TextField serverField = new java.awt.TextField();
	java.awt.Label label2 = new java.awt.Label();
	java.awt.Label label3 = new java.awt.Label();
	java.awt.TextField portField = new java.awt.TextField();
	java.awt.Label label4 = new java.awt.Label();
	java.awt.TextField loginField = new java.awt.TextField();
	java.awt.TextField passwordField = new java.awt.TextField();
	java.awt.Label label5 = new java.awt.Label();
	java.awt.Label label6 = new java.awt.Label();
	java.awt.Label label7 = new java.awt.Label();
	//}}
    
    // Used for addNotify check.
	boolean fComponentsAdjusted = false;

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == okButton)
				okButton_ActionPerformed(event);
			else if (object == cancelButton)
				cancelButton_ActionPerformed(event);
		}
	}

    public static int s_int(String s)
    {
        try
        {
            return Integer.parseInt(s);
        }
        catch(Throwable t)
        {
            return 0;
        }
    }
	void okButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
        label7.setText("");
	    okButton.setEnabled(false);
	    cancelButton.setEnabled(false);
	    if(serverField.getText().length()==0)
	    {
            label7.setText("Please enter your server URL.");
	        okButton.setEnabled(true);
	        cancelButton.setEnabled(true);
            return;
        }
	    if(s_int(portField.getText())<=0)
	    {
            label7.setText("Please enter a valid server port.");
	        okButton.setEnabled(true);
	        cancelButton.setEnabled(true);
            return;
        }
	    if(loginField.getText().length()==0)
	    {
            label7.setText("Please enter your Archon name.");
	        okButton.setEnabled(true);
	        cancelButton.setEnabled(true);
            return;
        }
	    if(passwordField.getText().length()==0)
	    {
            label7.setText("Please enter your Archon password.");
	        okButton.setEnabled(true);
	        cancelButton.setEnabled(true);
            return;
        }
	    
        label7.setText("Connecting...");
        label7.repaint();
	    GrinderConnection.disconnect();
	    String status=GrinderConnection.connect((MUDGrinder)myParent, serverField.getText(), s_int(portField.getText()));
	    
	    if(status.length()>0)
	    {
            label7.setText("No connection to '"+serverField.getText()+"' on port "+s_int(portField.getText())+".");
	        okButton.setEnabled(true);
	        cancelButton.setEnabled(true);
            return;
        }
        label7.setText("Logging in...");
        label7.repaint();
        boolean loggedIn=TheGrinder.login(loginField.getText(), passwordField.getText());
	    if(!loggedIn)
	    {
            label7.setText("Unable to login with above Archon info..");
	        okButton.setEnabled(true);
	        cancelButton.setEnabled(true);
            return;
        }
        label7.setText("Going invisible...");
        label7.repaint();
        StringBuffer p=TheGrinder.safelyExpect(null,"wizinv","view");
        if(p==null)
	    {
            label7.setText("Login ok, but this isn't an Archon!");
	        okButton.setEnabled(true);
	        cancelButton.setEnabled(true);
            return;
        }
	    okButton.setEnabled(true);
	    cancelButton.setEnabled(true);
        this.hide();
        ((MUDGrinder)myParent).suddenlyConnected();
        this.dispose();
	}


	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == GrinderConnectDialog.this)
				GrinderConnectDialog_WindowClosing(event);
		}
	}

	class SymKey extends java.awt.event.KeyAdapter
	{
		public void keyPressed(java.awt.event.KeyEvent event)
		{
			Object object = event.getSource();
			if ((object == okButton)&&((event.getKeyCode()==13)||(event.getKeyCode()==10)))
                okButton_ActionPerformed(null);
			if ((object == cancelButton)&&((event.getKeyCode()==13)||(event.getKeyCode()==10)))
                cancelButton_ActionPerformed(null);	
		}
	}
	void GrinderConnectDialog_WindowClosing(java.awt.event.WindowEvent event)
	{
		// to do: code goes here.
	}


	void cancelButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
		this.hide();
	}
}
